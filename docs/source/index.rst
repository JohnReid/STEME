.. STEME documentation master file, created by
   sphinx-quickstart on Fri Sep  2 08:33:44 2011.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.


.. index:: STEME

Accurate efficient motif finding in large data sets
===================================================

.. This is a reStructuredText document. If you are reading this in text format, you might be
   better off pointing your web browser at a HTML version of this file. You should find such a version
   here_ or perhaps on the web here: http://sysbio.mrc-bsu.cam.ac.uk/johns/STEME/. 

.. _here: build/html/index.html



STEME started life as an approximation to the Expectation-Maximisation algorithm for the type of model
used in motif finders such as MEME_. STEME's EM approximation runs an order of magnitude more quickly than
the MEME implementation for typical parameter settings. STEME has now developed into a fully-fledged
motif finder in its own right.

.. _MEME: http://meme.sdsc.edu/meme/intro.html


STEME's source code can be found at its `PyPI page`_. The latest version of STEME's documentation is 
at its `Python package page`_. An installation of STEME is available_ to run over the web.


.. _PyPI page: http://pypi.python.org/pypi/STEME/
.. _available : http://sysbio.mrc-bsu.cam.ac.uk/STEME/
.. _Python package page: http://packages.python.org/STEME/



.. index:: contents

Contents
========

.. toctree::
   :maxdepth: 2

   getting_started.rst
   using.rst
   options.rst
   scanning.rst






.. index:: benefits of STEME
.. _why-use:

Why use STEME?
==============


Proven motif finding techniques
-------------------------------
STEME is based on the tried-and-tested MEME algorithm. MEME is one of the most mature and popular motif finders.
It was one of the top performers in Tompa et al.'s benchmark comparison_ of motif finders.



Designed for large data sets
----------------------------
STEME is designed to be used on the type of large data sets typically generated by modern biological 
experiments. STEME has been tested on input in the tens of megabases, but there is
no reason why it should not be used on larger data sets. 



Fast
----
STEME is fast. Typically motif finders have a runtime that grows quickly with the size
of the input. Due to STEME's use of suffix trees it does not suffer this problem. STEME provides
options to control the runtime so that the user controls how long they are prepared to wait for the results.



Flexible motif models
---------------------
Many motif finders (especially fast enumerative motif finders) use consensus sequences as models of binding sites.
These are not as flexible as the PWMs that STEME uses and cannot capture the same range of motifs as PWMs.



Easy to use
-----------
STEME produces output in MEME's well established format making it easy to use in downstream tools. STEME's
output has been tested with tools from MEME, BioPython and BioPerl.



Accurate significance calculations
----------------------------------
STEME's significance calculations are designed with large data sets in mind. Motif finders that have
not been written for large data sets can often badly miscalculate the significance of the motifs they
find. This is a particularly insidious problem and hard for the user to identify.



Available as a web service
--------------------------
STEME can be installed locally on your machine or can be run over the web on our servers_.

.. _servers: http://sysbio.mrc-bsu.cam.ac.uk/STEME/.




.. _comparison: http://www.nature.com/index.html?file=/nbt/journal/v23/n1/abs/nbt1053.html




.. index:: publications

Publication
===========

The EM approximation that is at the heart of STEME has been published in `Nucleic Acids Research`_::

  STEME: efficient EM to find motifs in large data sets 
  Nucl. Acids Res. (2011) 39(18)
  Reid JE, Wernisch L

If you find STEME useful please cite us.

.. _Nucleic Acids Research: http://nar.oxfordjournals.org/content/39/18/e126.long






